var Vector2=function(){return function(c,a){this.x=c;this.y=a}}(),Vector3=function(){return function(c,a,b){this.x=c;this.y=a;this.z=b}}(),Graphics=function(){function c(a,b,c){this.w=b;this.h=c;a.width=b;a.height=c;this.ctx=a.getContext("2d");this.imageData=this.ctx.getImageData(0,0,b,c);a=new ArrayBuffer(this.imageData.data.length);this.buf8=new Uint8ClampedArray(a)}c.prototype.putPixel=function(a,b){var c=4*(a.y*this.w+a.x);this.buf8[c+3]=255;this.buf8[c]=b.x;this.buf8[c+1]=b.y;this.buf8[c+2]=
b.z};c.prototype.showBuffer=function(){this.imageData.data.set(this.buf8);this.ctx.putImageData(this.imageData,0,0)};return c}(),Sphere=function(){return function(c,a,b,d){this.center=c;this.radius=a;this.color=b;this.specular=d}}(),Math_3D=function(){function c(){}c.AddVectors=function(a,b){var c=[b.x,b.y,b.z],e=[a.x,a.y,a.z].map(function(a,b){return a+c[b]});return new Vector3(e[0],e[1],e[2])};c.SubtractVectors=function(a,b){var c=[b.x,b.y,b.z],e=[a.x,a.y,a.z].map(function(a,b){return a-c[b]});
return new Vector3(e[0],e[1],e[2])};c.DotProduct=function(a,b){return a.x*b.x+a.y*b.y+a.z*b.z};c.CrossProduct=function(a,b){return new Vector3(a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x)};c.VectorMagnitude=function(a){return Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z)};c.MultiplyVector=function(a,b){return new Vector3(a.x*b,a.y*b,a.z*b)};c.DivideVector=function(a,b){return new Vector3(a.x/b,a.y/b,a.z/b)};c.UnitVector=function(a){return c.DivideVector(a,c.VectorMagnitude(a))};c.AbsVector=function(a){return new Vector3(Math.abs(a.x),
Math.abs(a.y),Math.abs(a.z))};c.IntersectRaySphere=function(a,b,d){var e=c.UnitVector(b);b=d.radius;d=c.SubtractVectors(a,d.center);e=c.DotProduct(e,d);a=-e;e*=e;d=c.VectorMagnitude(d);d=Math.sqrt(e-d*d+b*b);b=a-d;a+=d;return b<a?b:a};c.IntersectAllSpheres=function(a,b,d){for(var e=c.UnitVector(b),h=void 0,l=999,p=0;p<d.length;p++){var m=c.IntersectRaySphere(a,b,d[p]);l>m&&0<=m&&(l=m,h=d[p])}return void 0!=h?(a=c.AddVectors(a,c.MultiplyVector(e,l)),b=c.SubtractVectors(a,h.center),b=c.UnitVector(b),
{sphere:h,distance:l,hit_point:a,hit_normal:b}):{sphere:h,distance:l,hit_point:void 0,hit_normal:void 0}};return c}(),LIGHT_TYPE;(function(c){c[c.AMBIENT=0]="AMBIENT";c[c.POINT=1]="POINT";c[c.DIRECTIONAL=2]="DIRECTIONAL"})(LIGHT_TYPE||(LIGHT_TYPE={}));
for(var Light=function(){return function(c,a,b,d){this.type=c;this.intensity=a;this.position=b;this.direction=d}}(),Lighting=function(){function c(){}c.CalcLighting=function(a,b,c,e,h,l){for(var d=0,m=0;m<e.length;m++){var n=e[m];if(n.type==LIGHT_TYPE.AMBIENT)d+=n.intensity;else{var k=n.type==LIGHT_TYPE.POINT?Math_3D.SubtractVectors(n.position,a):n.direction;var f=Math_3D.AddVectors(k,b);if(void 0==Math_3D.IntersectAllSpheres(a,f,l).sphere&&(f=Math_3D.DotProduct(b,k),0<f&&(d+=n.intensity*f/(Math_3D.VectorMagnitude(b)*
Math_3D.VectorMagnitude(k))),-1!=h)){f=Math_3D.MultiplyVector(b,2);var q=Math_3D.DotProduct(b,k);f=Math_3D.MultiplyVector(f,q);k=Math_3D.SubtractVectors(f,k);f=Math_3D.DotProduct(k,c);0<f&&(d+=n.intensity*Math.pow(f/(Math_3D.VectorMagnitude(k)*Math_3D.VectorMagnitude(c)),h))}}}return d};return c}(),canvas=document.getElementById("drawCanvas"),g=new Graphics(canvas,256,256),sphereArray=[new Sphere(new Vector3(0,1,3),1,new Vector3(255,0,255),500),new Sphere(new Vector3(2,0,6),1,new Vector3(0,255,255),
500),new Sphere(new Vector3(-2,0,4),1,new Vector3(255,255,0),10),new Sphere(new Vector3(0,-5001,0),5E3,new Vector3(220,220,220),1E3)],lightArray=[new Light(LIGHT_TYPE.AMBIENT,.2),new Light(LIGHT_TYPE.POINT,.6,new Vector3(2,1,0)),new Light(LIGHT_TYPE.DIRECTIONAL,.2,void 0,new Vector3(1,4,4))],camera=new Vector3(0,0,0),x=-g.w/2;x<g.w/2;x++)for(var y=-g.h/2;y<g.h/2;y++){var hit=Math_3D.IntersectAllSpheres(camera,new Vector3(x/g.w,-y/g.h,1),sphereArray);if(void 0!=hit.sphere){var ray_dir=Math_3D.UnitVector(new Vector3(x/
g.w,-y/g.h,1)),light_index=Lighting.CalcLighting(hit.hit_point,hit.hit_normal,new Vector3(-ray_dir.x,-ray_dir.y,-ray_dir.z),lightArray,hit.sphere.specular,sphereArray);g.putPixel(new Vector2(x+g.w/2,y+g.w/2),new Vector3(hit.sphere.color.x*light_index,hit.sphere.color.y*light_index,hit.sphere.color.z*light_index))}else g.putPixel(new Vector2(x+g.w/2,y+g.w/2),new Vector3(0,0,255))}g.showBuffer();